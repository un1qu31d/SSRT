{"version":3,"sources":["components/registration-steps/form/index.module.scss","reportWebVitals.js","components/registration-steps/form/account.js","components/registration-steps/form/company.js","components/registration-steps/form/logo.js","components/registration-steps/form/blue-mailbox.jpg","components/registration-steps/form/confirmation.js","components/registration-steps/form/loader.gif","components/registration-steps/form/done.js","components/registration-steps/steps/index.js","components/registration-steps/index.js","layouts/main/index.js","pages/home.js","index.js","components/registration-steps/steps/index.module.scss","layouts/main/index.module.scss","components/registration-steps/index.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AccountForm","props","inputs","state","submitting","countryCode","countries","findByIso2","handleSubmit","bind","handleInputChange","handleFullNameChange","handleBusinessEmailChange","handleCountryChange","handlePhoneNumberChange","handlePasswordChange","handleRepeatedPasswordChange","this","actions","setState","_state","validations","fullName","validateFullName","businessEmail","validateBusinessEmail","country","validateCountry","phoneNumber","validatePhoneNumber","password","validatePassword","repeatedPassword","validateRepeatedPassword","Object","values","some","_validation","nextStep","item","value","onInputChange","event","target","validator","isEmail","isMobilePhone","length","classes","push","Styles","className","join","itemClasses","type","placeholder","onChange","hidden","all","map","_country","href","onClick","Component","CompanyForm","cities","csc","getStatesOfCountry","getAllCountries","find","id","handleBack","handleCompanyNameChange","handleAddressChange","handleCityChange","handleAltPhoneNumberChange","companyName","validateCompanyName","address","validateAddress","city","validateCity","altPhoneNumber","validateAltPhoneNumber","previousStep","defaultValue","disabled","_city","LogoForm","icon","faPlus","faImages","ConfirmationForm","description","src","blueMailBox","DoneForm","loading","sending","formdata","FormData","append","fetch","method","body","redirect","response","text","result","catch","error","alt","loader","Steps","steps","currentStep","style","width","_step","_stepIndex","stepCalsses","defaultProps","faUser","faBuilding","faCheckCircle","RegistrationSteps","account","company","language","logo","confirmation","done","changeCurrentStep","changeCurrentStepToAccount","changeCurrentStepToCompany","changeCurrentStepToLogo","changeCurrentStepToConfirmations","changeCurrentStepToDone","form","Main","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a13bd665.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__2q8xT\",\"header\":\"form_header__bSzmv\",\"title\":\"form_title__3sKJB\",\"main\":\"form_main__a_S65\",\"items\":\"form_items__1gFjG\",\"item\":\"form_item__2iQCT\",\"field\":\"form_field__Yonx3\",\"label\":\"form_label__2XFuX\",\"status--empty\":\"form_status--empty__1lUan\",\"note\":\"form_note__1oBmc\",\"image\":\"form_image__3YfIw\",\"holder\":\"form_holder__2_QnE\",\"button\":\"form_button__3QYRs\",\"icon\":\"form_icon__1DzO-\",\"description\":\"form_description__1G1hl\",\"size--full\":\"form_size--full__3NleT\",\"type--prefix\":\"form_type--prefix___PRb6\",\"type--suffix\":\"form_type--suffix__vWFub\",\"affix\":\"form_affix__2hq4P\",\"input\":\"form_input__3_IxB\",\"theme--error\":\"form_theme--error__3ad80\",\"theme--disabled\":\"form_theme--disabled__f7Ar2\",\"message\":\"form_message__3PnZ7\",\"footer\":\"form_footer__zuZJT\",\"links\":\"form_links__34ZBS\",\"link\":\"form_link__2huuw\",\"options\":\"form_options__34638\",\"option\":\"form_option__12YNu\",\"type--primary\":\"form_type--primary__KPnp7\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport validator from 'validator';\r\nimport countries from 'country-list-js';\r\n\r\nclass AccountForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {inputs} = this.props;\r\n    this.state = {\r\n      submitting: false,\r\n      countryCode: `${inputs['country'] ? `+${countries.findByIso2(inputs['country'])['dialing_code']}` : '+'}`\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleFullNameChange = this.handleFullNameChange.bind(this);\r\n    this.handleBusinessEmailChange = this.handleBusinessEmailChange.bind(this);\r\n    this.handleCountryChange = this.handleCountryChange.bind(this);\r\n    this.handlePhoneNumberChange = this.handlePhoneNumberChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleRepeatedPasswordChange = this.handleRepeatedPasswordChange.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const {inputs, actions} = this.props;\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      submitting: true\r\n    }));\r\n    const validations = {\r\n      fullName: this.validateFullName(inputs['fullName']),\r\n      businessEmail: this.validateBusinessEmail(inputs['businessEmail']),\r\n      country: this.validateCountry(inputs['country']),\r\n      phoneNumber: this.validatePhoneNumber(inputs['phoneNumber']),\r\n      password: this.validatePassword(inputs['password'], inputs['repeatedPassword']),\r\n      repeatedPassword: this.validateRepeatedPassword(inputs['password'], inputs['repeatedPassword'])\r\n    };\r\n    if (!Object.values(validations).some(_validation => _validation !== true)) actions.nextStep();\r\n  }\r\n\r\n  handleInputChange(item, value) {\r\n    const {onInputChange} = this.props;\r\n    onInputChange('account', item, value);\r\n  }\r\n\r\n  handleFullNameChange(event) {\r\n    this.handleInputChange('fullName', event.target.value);\r\n  }\r\n\r\n  handleBusinessEmailChange(event) {\r\n    this.handleInputChange('businessEmail', event.target.value);\r\n  }\r\n\r\n  handleCountryChange(event) {\r\n    this.handleInputChange('country', event.target.value);\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      countryCode: `+${countries.findByIso2(event.target.value)['dialing_code']}`\r\n    }));\r\n  }\r\n\r\n  handlePhoneNumberChange(event) {\r\n    this.handleInputChange('phoneNumber', event.target.value);\r\n  }\r\n\r\n  handlePasswordChange(event) {\r\n    this.handleInputChange('password', event.target.value);\r\n  }\r\n\r\n  handleRepeatedPasswordChange(event) {\r\n    this.handleInputChange('repeatedPassword', event.target.value);\r\n  }\r\n\r\n  validateFullName(fullName) {\r\n    if (!fullName) return 1;\r\n    return true;\r\n  }\r\n\r\n  validateBusinessEmail(businessEmail) {\r\n    if (!businessEmail) return 1;\r\n    if (!validator.isEmail(businessEmail)) return 2;\r\n    return true;\r\n  }\r\n  \r\n  validateCountry(country) {\r\n    if (!country) return 1;\r\n    return true;\r\n  }\r\n  \r\n  validatePhoneNumber(phoneNumber) {\r\n    if (!phoneNumber) return 1;\r\n    if (!validator.isMobilePhone(phoneNumber)) return 2;\r\n    return true;\r\n  }\r\n\r\n  validatePassword(password, repeatedPassword) {\r\n    if (!password) return 1;\r\n    if (password !== repeatedPassword) return 2;\r\n    if (password.length < 6) return 3;\r\n    return true;\r\n  }\r\n\r\n  validateRepeatedPassword(password, repeatedPassword) {\r\n    if (!repeatedPassword) return 1;\r\n    if (password !== repeatedPassword) return 2;\r\n    if (password.length < 6) return 3;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {submitting, countryCode} = this.state;\r\n    const {inputs} = this.props;\r\n    const validations = {\r\n      fullName: this.validateFullName(inputs['fullName']),\r\n      businessEmail: this.validateBusinessEmail(inputs['businessEmail']),\r\n      country: this.validateCountry(inputs['country']),\r\n      phoneNumber: this.validatePhoneNumber(inputs['phoneNumber']),\r\n      password: this.validatePassword(inputs['password'], inputs['repeatedPassword']),\r\n      repeatedPassword: this.validateRepeatedPassword(inputs['password'], inputs['repeatedPassword'])\r\n    };\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['header']}>\r\n          <div className={Styles['title']}>\r\n            Tell us more about you.\r\n          </div>\r\n        </div>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['items']}>\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['fullName'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      FULL NAME\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your full name\"\r\n                        value={inputs['fullName']}\r\n                        onChange={this.handleFullNameChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['fullName'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your full name\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['businessEmail'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      BUSINESS EMAIL\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your business email\"\r\n                        value={inputs['businessEmail']}\r\n                        onChange={this.handleBusinessEmailChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['businessEmail'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your business email\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              if (submitting && validations['country'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      COUNTRY\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <select\r\n                        className={!inputs['country'] ? Styles['status--empty'] : ''}\r\n                        value={inputs['country']}\r\n                        onChange={this.handleCountryChange}\r\n                      >\r\n                        <option value=\"\" hidden>Select Your country</option>\r\n                        {Object.values(countries.all).map(_country => (\r\n                          <option key={_country['iso2']} value={_country['iso2']}>{_country['name']}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['country'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Select your country\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['type--prefix']);\r\n              if (submitting && validations['phoneNumber'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['affix']}>\r\n                      {countryCode}\r\n                    </div>\r\n                    <div className={Styles['label']}>\r\n                      PHONE NUMBER\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your phone number\"\r\n                        value={inputs['phoneNumber']}\r\n                        onChange={this.handlePhoneNumberChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['phoneNumber'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your phone number\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['password'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      PASSWORD\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Your password\"\r\n                        value={inputs['password']}\r\n                        onChange={this.handlePasswordChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['password'] === 1) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your password\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['repeatedPassword'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      REPEAT PASSWORD\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Your password again\"\r\n                        value={inputs['repeatedPassword']}\r\n                        onChange={this.handleRepeatedPasswordChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['repeatedPassword'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    {(() => {\r\n                      switch (validations['repeatedPassword']) {\r\n                        case 1:\r\n                          return 'Please Enter your password again';\r\n                        case 2:\r\n                          return 'Please Enter matched password';\r\n                        case 3:\r\n                          return 'Please make sure that you password at least 6 digits';\r\n                        default:\r\n                          return '';\r\n                      }\r\n                    })()}\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className={Styles['footer']}>\r\n          <div className={Styles['links']}>\r\n            <div className={Styles['link']}>\r\n              <a href=\"/\">Back to login</a>\r\n            </div>\r\n          </div>\r\n          <div className={Styles['options']}>\r\n            <div className={`${Styles['option']} ${Styles['type--primary']}`} onClick={this.handleSubmit}>\r\n              Next\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountForm;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport validator from 'validator';\r\nimport countries from 'country-list-js';\r\nimport csc from 'country-state-city';\r\n\r\nclass CompanyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {inputs} = this.props;\r\n    this.state = {\r\n      submitting: false,\r\n      countryCode: `${inputs['country'] ? `+${countries.findByIso2(inputs['country'])['dialing_code']}` : '+'}`,\r\n      cities: inputs['country'] ? csc.getStatesOfCountry((csc.getAllCountries().find(_country => _country['sortname'] === inputs['country']) ?? {id: ''})['id']) : []\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleCompanyNameChange = this.handleCompanyNameChange.bind(this);\r\n    this.handleAddressChange = this.handleAddressChange.bind(this);\r\n    this.handleBusinessEmailChange = this.handleBusinessEmailChange.bind(this);\r\n    this.handleCountryChange = this.handleCountryChange.bind(this);\r\n    this.handleCityChange = this.handleCityChange.bind(this);\r\n    this.handlePhoneNumberChange = this.handlePhoneNumberChange.bind(this);\r\n    this.handleAltPhoneNumberChange = this.handleAltPhoneNumberChange.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const {inputs, actions} = this.props;\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      submitting: true\r\n    }));\r\n    const validations = {\r\n      companyName: this.validateCompanyName(inputs['companyName']),\r\n      address: this.validateAddress(inputs['address']),\r\n      businessEmail: this.validateBusinessEmail(inputs['businessEmail']),\r\n      country: this.validateCountry(inputs['country']),\r\n      city: this.validateCity(inputs['country'], inputs['city']),\r\n      phoneNumber: this.validatePhoneNumber(inputs['phoneNumber']),\r\n      altPhoneNumber: this.validateAltPhoneNumber(inputs['altPhoneNumber'])\r\n    };\r\n    if (!Object.values(validations).some(_validation => _validation !== true)) actions.nextStep();\r\n  }\r\n\r\n  handleBack() {\r\n    const {submitting, countryCode} = this.state;\r\n    const {actions} = this.props;\r\n    actions.previousStep();\r\n  }\r\n\r\n  handleInputChange(item, value) {\r\n    const {onInputChange} = this.props;\r\n    onInputChange('company', item, value);\r\n  }\r\n\r\n  handleCompanyNameChange(event) {\r\n    this.handleInputChange('companyName', event.target.value);\r\n  }\r\n\r\n  handleAddressChange(event) {\r\n    this.handleInputChange('address', event.target.value);\r\n  }\r\n\r\n  handleBusinessEmailChange(event) {\r\n    this.handleInputChange('businessEmail', event.target.value);\r\n  }\r\n\r\n  handleCountryChange(event) {\r\n    this.handleInputChange('country', event.target.value);\r\n    this.handleInputChange('city', '');\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      countryCode: `+${countries.findByIso2(event.target.value)['dialing_code']}`,\r\n      cities: csc.getStatesOfCountry((csc.getAllCountries().find(_country => _country['sortname'] === event.target.value) ?? {id: ''})['id'])\r\n    }));\r\n  }\r\n\r\n  handleCityChange(event) {\r\n    this.handleInputChange('city', event.target.value);\r\n  }\r\n\r\n  handlePhoneNumberChange(event) {\r\n    this.handleInputChange('phoneNumber', event.target.value);\r\n  }\r\n\r\n  handleAltPhoneNumberChange(event) {\r\n    this.handleInputChange('altPhoneNumber', event.target.value);\r\n  }\r\n\r\n  validateCompanyName(companyName) {\r\n    if (!companyName) return 1;\r\n    return true;\r\n  }\r\n  \r\n  validateAddress(address) {\r\n    if (!address) return 1;\r\n    return true;\r\n  }\r\n\r\n  validateBusinessEmail(businessEmail) {\r\n    if (!businessEmail) return 1;\r\n    if (!validator.isEmail(businessEmail)) return 2;\r\n    return true;\r\n  }\r\n  \r\n  validateCountry(country) {\r\n    if (!country) return 1;\r\n    return true;\r\n  }\r\n  \r\n  validateCity(country, city) {\r\n    const {cities} = this.state;\r\n    if (!country) return 1;\r\n    if (!city && cities.length) return 2;\r\n    return true;\r\n  }\r\n  \r\n  validatePhoneNumber(phoneNumber) {\r\n    if (!phoneNumber) return 1;\r\n    if (!validator.isMobilePhone(phoneNumber)) return 2;\r\n    return true;\r\n  }\r\n  \r\n  validateAltPhoneNumber(altPhoneNumber) {\r\n    if (!altPhoneNumber) return 1;\r\n    if (!validator.isMobilePhone(altPhoneNumber)) return 2;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {submitting, countryCode, cities} = this.state;\r\n    const {inputs} = this.props;\r\n    const validations = {\r\n      companyName: this.validateCompanyName(inputs['companyName']),\r\n      address: this.validateAddress(inputs['address']),\r\n      businessEmail: this.validateBusinessEmail(inputs['businessEmail']),\r\n      country: this.validateCountry(inputs['country']),\r\n      city: this.validateCity(inputs['country'], inputs['city']),\r\n      phoneNumber: this.validatePhoneNumber(inputs['phoneNumber']),\r\n      altPhoneNumber: this.validateAltPhoneNumber(inputs['altPhoneNumber'])\r\n    };\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['header']}>\r\n          <div className={Styles['title']}>\r\n            Verify your compnay.\r\n          </div>\r\n        </div>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['title']}>\r\n            Entring this information corectlly will facilitate the compnay verfication proccess\r\n          </div>\r\n          <div className={Styles['items']}>\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              itemClasses.push(Styles['type--suffix']);\r\n              if (submitting && validations['companyName'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['affix']}>\r\n                      <select\r\n                        className={!inputs['language'] ? Styles['status--empty'] : ''}\r\n                        defaultValue={inputs['language']}\r\n                      >\r\n                        <option value=\"en\">English</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className={Styles['label']}>\r\n                      COMPANY NAME\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your company name\"\r\n                        value={inputs['companyName']}\r\n                        onChange={this.handleCompanyNameChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['companyName'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your company name\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['address'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      ADDRESS\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your address\"\r\n                        value={inputs['address']}\r\n                        onChange={this.handleAddressChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['address'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your address\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['businessEmail'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      BUSINESS EMAIL\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your business email\"\r\n                        value={inputs['businessEmail']}\r\n                        onChange={this.handleBusinessEmailChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['businessEmail'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your business email\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              if (submitting && validations['country'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      COUNTRY\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <select\r\n                        className={!inputs['country'] ? Styles['status--empty'] : ''}\r\n                        value={inputs['country']}\r\n                        onChange={this.handleCountryChange}\r\n                      >\r\n                        <option value=\"\" hidden>Select Your country</option>\r\n                        {Object.values(countries.all).map(_country => (\r\n                          <option key={_country['iso2']} value={_country['iso2']}>{_country['name']}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['country'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Select your country\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              if (!inputs['country']) itemClasses.push(Styles['theme--disabled']);\r\n              if (submitting && validations['city'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      CITY\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <select\r\n                        className={!inputs['city'] ? Styles['status--empty'] : ''}\r\n                        value={inputs['city']}\r\n                        onChange={this.handleCityChange}\r\n                        disabled={!inputs['country']}\r\n                      >\r\n                        <option value=\"\" hidden>Select Your city</option>\r\n                        {cities.map(_city => (\r\n                          <option key={_city['id']} value={_city['name']}>{_city['name']}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['city'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    {(() => {\r\n                      switch (validations['city']) {\r\n                        case 1:\r\n                          return 'Please Select your country first';\r\n                        case 2:\r\n                          return 'Please Select your city';\r\n                        default:\r\n                          return '';\r\n                      }\r\n                    })()}\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['type--prefix']);\r\n              if (submitting && validations['phoneNumber'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['affix']}>\r\n                      {countryCode}\r\n                    </div>\r\n                    <div className={Styles['label']}>\r\n                      COMPANY PHONE NUMBER\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your company phone number\"\r\n                        value={inputs['phoneNumber']}\r\n                        onChange={this.handlePhoneNumberChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['phoneNumber'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your company phone number\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['type--prefix']);\r\n              if (submitting && validations['altPhoneNumber'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['affix']}>\r\n                      {countryCode}\r\n                    </div>\r\n                    <div className={Styles['label']}>\r\n                      COMPANY PHONE NUMBER\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your company phone number\"\r\n                        value={inputs['altPhoneNumber']}\r\n                        onChange={this.handleAltPhoneNumberChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['altPhoneNumber'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your company phone number\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className={Styles['footer']}>\r\n          <div className={Styles['links']}>\r\n          </div>\r\n          <div className={Styles['options']}>\r\n            <div className={`${Styles['option']}`} onClick={this.handleBack}>\r\n              Back\r\n            </div>\r\n            <div className={`${Styles['option']} ${Styles['type--primary']}`} onClick={this.handleSubmit}>\r\n              Next\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompanyForm;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport {faImages} from '@fortawesome/free-regular-svg-icons';\r\n\r\nclass LogoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitting: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const {actions} = this.props;\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      submitting: true\r\n    }));\r\n    actions.nextStep();\r\n  }\r\n\r\n  handleBack() {\r\n    const {actions} = this.props;\r\n    actions.previousStep();\r\n  }\r\n\r\n  render() {\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['header']}>\r\n          <div className={Styles['title']}>\r\n            Upload compnay Logo.\r\n          </div>\r\n        </div>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['items']}>\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['image']}>\r\n                    <div className={Styles['holder']}>\r\n                      <div className={Styles['icon']}>\r\n                        <div className={Styles['button']}>\r\n                          <FontAwesomeIcon icon={faPlus} />\r\n                        </div>\r\n                        <FontAwesomeIcon icon={faImages} />\r\n                      </div>\r\n                    </div>\r\n                    <div className={Styles['description']}>\r\n                      Only images with a size lower than 500 KB are allowed.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className={Styles['footer']}>\r\n          <div className={Styles['links']}>\r\n          </div>\r\n          <div className={Styles['options']}>\r\n            <div className={`${Styles['option']}`} onClick={this.handleBack}>\r\n              Back\r\n            </div>\r\n            <div className={`${Styles['option']} ${Styles['type--primary']}`} onClick={this.handleSubmit}>\r\n              Submit\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogoForm;","export default __webpack_public_path__ + \"static/media/blue-mailbox.791144d7.jpg\";","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport blueMailBox from './blue-mailbox.jpg';\r\n\r\nclass ConfirmationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitting: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const {actions} = this.props;\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      submitting: true\r\n    }));\r\n    this.handleInputChange('confirmation', true);\r\n    actions.nextStep();\r\n  }\r\n\r\n  handleBack() {\r\n    const {actions} = this.props;\r\n    actions.previousStep();\r\n  }\r\n\r\n  handleInputChange(item, value) {\r\n    const {onInputChange} = this.props;\r\n    onInputChange('confirmation', item, value);\r\n  }\r\n\r\n  render() {\r\n    const {description} = this.props;\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['header']}>\r\n          <div className={Styles['title']}>\r\n            You are all set. Ready?\r\n          </div>\r\n        </div>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['message']}>\r\n            <div className={Styles['image']}>\r\n              <img src={blueMailBox} />\r\n            </div>\r\n            <div className={Styles['title']}>\r\n              We will send a message for this e-mail\r\n            </div>\r\n            <div className={Styles['description']}>\r\n              {description}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={Styles['footer']}>\r\n          <div className={Styles['links']}>\r\n          </div>\r\n          <div className={Styles['options']}>\r\n            <div className={`${Styles['option']}`} onClick={this.handleBack}>\r\n              Back\r\n            </div>\r\n            <div className={`${Styles['option']} ${Styles['type--primary']}`} onClick={this.handleSubmit}>\r\n              Confirm\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConfirmationForm;","export default __webpack_public_path__ + \"static/media/loader.8a9de4a8.gif\";","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport blueMailBox from './blue-mailbox.jpg';\r\nimport loader from './loader.gif';\r\n\r\nclass DoneForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      sending: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {inputs} = this.props;\r\n    var formdata = new FormData();\r\n    formdata.append(\"user_full_name\", inputs['account']['fullName']);\r\n    formdata.append(\"user_email\", inputs['account']['businessEmail']);\r\n    formdata.append(\"user_phone\", inputs['account']['phoneNumber']);\r\n    formdata.append(\"user_nationality\", inputs['account']['country']);\r\n    formdata.append(\"user_password\", inputs['account']['password']);\r\n    formdata.append(\"user_password_confirmation\", inputs['account']['repeatedPassword']);\r\n    formdata.append(\"user_position\", \"\");\r\n    formdata.append(\"user_extra_data[phone]\", \"\");\r\n    formdata.append(\"lang\", inputs['company']['language']);\r\n    formdata.append(\"company_name\", inputs['company']['companyName']);\r\n    formdata.append(\"company_address\", inputs['company']['address']);\r\n    formdata.append(\"company_business_email\", inputs['company']['businessEmail']);\r\n    formdata.append(\"company_phone\", inputs['company']['phoneNumber']);\r\n    formdata.append(\"company_extra_data[phone]\", inputs['company']['altPhoneNumber']);\r\n    formdata.append(\"company_country_id\", inputs['company']['country']);\r\n    formdata.append(\"company_city_id\", inputs['company']['city']);\r\n    // formdata.append(\"company_avatar\", \"\", \"\");\r\n\r\n    fetch(\"https://id.safav2.io.safavisa.com/register\", {\r\n      method: 'POST',\r\n      body: formdata,\r\n      redirect: 'follow'\r\n    })\r\n    .then(response => response.text())\r\n    .then(result => {\r\n      this.setState(_state => ({\r\n        ..._state,\r\n        loading: false,\r\n        sending: true\r\n      }));\r\n    })\r\n    .catch(error => {\r\n      this.setState(_state => ({\r\n        ..._state,\r\n        loading: false,\r\n        sending: false\r\n      }));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {loading, sending} = this.state;\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['message']}>\r\n            <div className={Styles['image']}>\r\n              <img src={blueMailBox} alt=\"\" />\r\n            </div>\r\n            {loading ? (\r\n            <img src={loader} alt=\"\" />\r\n            ) : sending ? (\r\n            <>\r\n              <div className={Styles['label']}>\r\n                Congratz, you successfully created your account\r\n              </div>\r\n              <div className={Styles['description']}>\r\n                We just sent you a confirmation email\r\n                <br />\r\n                Please check your E-mail\r\n              </div>\r\n            </>\r\n            ) : (\r\n            <div className={Styles['note']}>\r\n              There is an error happens please try again later \r\n            </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DoneForm;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faUser, faBuilding, faImages, faCheckCircle} from '@fortawesome/free-regular-svg-icons';\r\n\r\nclass Steps extends Component {\r\n  static defaultProps = {\r\n    steps: [\r\n      {id: 'account', icon: <FontAwesomeIcon icon={faUser} />},\r\n      {id: 'company', icon: <FontAwesomeIcon icon={faBuilding} />},\r\n      {id: 'logo', icon: <FontAwesomeIcon icon={faImages} />},\r\n      {id: 'confirmation', icon: <FontAwesomeIcon icon={faCheckCircle} />}\r\n    ],\r\n    currentStep: 1\r\n  }\r\n  render() {\r\n    const {steps, currentStep} = this.props;\r\n    const classes = [];\r\n    classes.push(Styles['steps']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['bar']}>\r\n          <div className={Styles['progress']} style={{width: `${(((currentStep > 1 ? (currentStep < steps.length ? currentStep : steps.length) : 1) - 1) / (steps.length - 1) * 100)}%`}}></div>\r\n        </div>\r\n        {steps.map((_step, _stepIndex) => {\r\n          const stepCalsses = [];\r\n          stepCalsses.push(Styles['step']);\r\n          if ((_stepIndex + 1) < currentStep) stepCalsses.push(Styles['status--completed']);\r\n          if ((_stepIndex + 1) === currentStep) stepCalsses.push(Styles['status--current']);\r\n          return (\r\n            <div key={_step['id']} className={stepCalsses.join(' ')}>\r\n              {_step['icon']}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Steps;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport AccountFrom from './form/account';\r\nimport CompanyFrom from './form/company';\r\nimport LogoFrom from './form/logo';\r\nimport ConfirmationFrom from './form/confirmation';\r\nimport DoneFrom from './form/done';\r\nimport Steps from './steps';\r\n\r\nclass RegistrationSteps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentStep: 1,\r\n      inputs: {\r\n        account: {\r\n          fullName: '',\r\n          businessEmail: '',\r\n          country: '',\r\n          phoneNumber: '',\r\n          password: '',\r\n          repeatedPassword: ''\r\n        },\r\n        company: {\r\n          language: 'en',\r\n          companyName: '',\r\n          address: '',\r\n          businessEmail: '',\r\n          country: '',\r\n          city: '',\r\n          phoneNumber: '',\r\n          altPhoneNumber: '',\r\n        },\r\n        logo: {\r\n        },\r\n        confirmation: {\r\n          confirmation: false\r\n        }\r\n      },\r\n      done: false\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.changeCurrentStep = this.changeCurrentStep.bind(this);\r\n    this.changeCurrentStepToAccount = this.changeCurrentStepToAccount.bind(this);\r\n    this.changeCurrentStepToCompany = this.changeCurrentStepToCompany.bind(this);\r\n    this.changeCurrentStepToLogo = this.changeCurrentStepToLogo.bind(this);\r\n    this.changeCurrentStepToConfirmations = this.changeCurrentStepToConfirmations.bind(this);\r\n    this.changeCurrentStepToDone = this.changeCurrentStepToDone.bind(this);\r\n  }\r\n\r\n  changeCurrentStepToAccount() {\r\n    this.changeCurrentStep(1);\r\n  }\r\n\r\n  changeCurrentStepToCompany() {\r\n    this.changeCurrentStep(2);\r\n  }\r\n  \r\n  changeCurrentStepToLogo() {\r\n    this.changeCurrentStep(3);\r\n  }\r\n  \r\n  changeCurrentStepToConfirmations() {\r\n    this.changeCurrentStep(4);\r\n  }\r\n\r\n  changeCurrentStepToDone() {\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      done: true\r\n    }));\r\n  }\r\n\r\n  changeCurrentStep(currentStep) {\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      currentStep\r\n    }));\r\n  }\r\n\r\n  handleInputChange(form, item, value) {\r\n    this.setState(_state => {\r\n      _state['inputs'][form][item] = value;\r\n      return _state;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {inputs, currentStep, done} = this.state;\r\n    const classes = [];\r\n    classes.push(Styles['registration-steps']);\r\n    return done ? (\r\n      <DoneFrom inputs={inputs} />\r\n    ) : (\r\n      <div className={classes.join()}>\r\n          <section className={Styles['steps-bar']}>\r\n            <Steps currentStep={currentStep} />\r\n          </section>\r\n          <section className={Styles['form']}>\r\n            {(() => {\r\n              switch (currentStep) {\r\n                case 1:\r\n                  return <AccountFrom\r\n                    inputs={inputs['account']}\r\n                    onInputChange={this.handleInputChange}\r\n                    actions={{\r\n                      nextStep: this.changeCurrentStepToCompany\r\n                    }}\r\n                  />\r\n                case 2:\r\n                  return <CompanyFrom\r\n                    inputs={inputs['company']}\r\n                    onInputChange={this.handleInputChange}\r\n                    actions={{\r\n                      previousStep: this.changeCurrentStepToAccount,\r\n                      nextStep: this.changeCurrentStepToLogo\r\n                    }}\r\n                  />\r\n                case 3:\r\n                  return <LogoFrom\r\n                    inputs={inputs['logo']}\r\n                    onInputChange={this.handleInputChange}\r\n                    actions={{\r\n                      previousStep: this.changeCurrentStepToCompany,\r\n                      nextStep: this.changeCurrentStepToConfirmations\r\n                    }}\r\n                  />\r\n                case 4:\r\n                  return <ConfirmationFrom\r\n                    inputs={inputs['confirmation']}\r\n                    onInputChange={this.handleInputChange}\r\n                    actions={{\r\n                      previousStep: this.changeCurrentStepToLogo,\r\n                      nextStep: this.changeCurrentStepToDone\r\n                    }}\r\n                    description={inputs['account']['businessEmail']}\r\n                  />\r\n              }\r\n            })()}\r\n          </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegistrationSteps;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport RegistrationSteps from '../../components/registration-steps';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    const classes = [];\r\n    classes.push(Styles['layout']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <section className={Styles['initial-screen']}>\r\n          <section className={Styles['header']}>\r\n          </section>\r\n          <section className={Styles['main']}>\r\n            <RegistrationSteps />\r\n          </section>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport MainLayout from '../layouts/main';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <MainLayout />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Home from './pages/home';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"steps\":\"steps_steps__1yyN3\",\"bar\":\"steps_bar__2C6HH\",\"progress\":\"steps_progress__3QOiJ\",\"step\":\"steps_step__3qWPJ\",\"status--current\":\"steps_status--current__7mAyu\",\"status--completed\":\"steps_status--completed__2UCk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"main_layout__2BPsF\",\"initial-screen\":\"main_initial-screen__2BsSE\",\"header\":\"main_header__2MJIR\",\"main\":\"main_main__1bDNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration-steps\":\"registration-steps_registration-steps__2WZ4X\"};"],"sourceRoot":""}