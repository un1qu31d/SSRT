{"version":3,"sources":["components/registration-steps/form/index.module.scss","reportWebVitals.js","components/registration-steps/form/inputs/password.js","components/registration-steps/form/account.js","components/registration-steps/form/company.js","components/registration-steps/form/logo.js","components/registration-steps/form/blue-mailbox.jpg","components/registration-steps/form/confirmation.js","components/registration-steps/form/loader.gif","components/registration-steps/form/done.js","components/registration-steps/steps/index.js","components/registration-steps/index.js","layouts/main/index.js","pages/home.js","index.js","components/registration-steps/steps/index.module.scss","layouts/main/index.module.scss","components/registration-steps/form/inputs/index.module.scss","components/registration-steps/index.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PasswordInput","props","state","isPasswordVisible","handleButtonPress","bind","handleButtonRelease","this","setState","_state","showPasswordOptionClasses","push","Styles","className","type","join","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","icon","faEye","Component","AccountForm","inputs","submitting","countryCode","countries","findByIso2","handleSubmit","handleInputChange","handleFullNameChange","handleBusinessEmailChange","handleCountryChange","handlePhoneNumberChange","handlePasswordChange","handleRepeatedPasswordChange","actions","validations","fullName","validateFullName","businessEmail","validateBusinessEmail","country","validateCountry","phoneNumber","validatePhoneNumber","password","validatePassword","repeatedPassword","validateRepeatedPassword","Object","values","some","_validation","nextStep","item","value","onInputChange","event","target","validator","isEmail","isMobilePhone","length","classes","itemClasses","placeholder","onChange","hidden","all","map","_country","href","onClick","CompanyForm","cities","csc","getStatesOfCountry","getAllCountries","find","id","handleBack","handleCompanyNameChange","handleAddressChange","handleCityChange","handleAltPhoneNumberChange","companyName","validateCompanyName","address","validateAddress","city","validateCity","altPhoneNumber","validateAltPhoneNumber","previousStep","defaultValue","disabled","_city","LogoForm","faPlus","faImages","ConfirmationForm","description","src","blueMailBox","alt","DoneForm","loading","sending","handleSendData","countryID","cityID","formdata","FormData","append","fetch","method","body","redirect","response","text","result","catch","error","sendData","loader","Steps","steps","currentStep","style","width","_step","_stepIndex","stepCalsses","defaultProps","faUser","faBuilding","faCheckCircle","RegistrationSteps","account","company","language","logo","confirmation","done","changeCurrentStep","changeCurrentStepToAccount","changeCurrentStepToCompany","changeCurrentStepToLogo","changeCurrentStepToConfirmations","changeCurrentStepToDone","form","Main","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f16027c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__2q8xT\",\"header\":\"form_header__bSzmv\",\"title\":\"form_title__3sKJB\",\"main\":\"form_main__a_S65\",\"items\":\"form_items__1gFjG\",\"item\":\"form_item__2iQCT\",\"field\":\"form_field__Yonx3\",\"label\":\"form_label__2XFuX\",\"status--empty\":\"form_status--empty__1lUan\",\"note\":\"form_note__1oBmc\",\"image\":\"form_image__3YfIw\",\"holder\":\"form_holder__2_QnE\",\"button\":\"form_button__3QYRs\",\"icon\":\"form_icon__1DzO-\",\"description\":\"form_description__1G1hl\",\"size--full\":\"form_size--full__3NleT\",\"type--prefix\":\"form_type--prefix___PRb6\",\"type--suffix\":\"form_type--suffix__vWFub\",\"affix\":\"form_affix__2hq4P\",\"input\":\"form_input__3_IxB\",\"theme--error\":\"form_theme--error__3ad80\",\"theme--disabled\":\"form_theme--disabled__f7Ar2\",\"message\":\"form_message__3PnZ7\",\"link\":\"form_link__2huuw\",\"footer\":\"form_footer__zuZJT\",\"links\":\"form_links__34ZBS\",\"options\":\"form_options__34638\",\"option\":\"form_option__12YNu\",\"type--primary\":\"form_type--primary__KPnp7\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEye} from '@fortawesome/free-regular-svg-icons';\r\n\r\nclass PasswordInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPasswordVisible: false\r\n    };\r\n    this.handleButtonPress = this.handleButtonPress.bind(this);\r\n    this.handleButtonRelease = this.handleButtonRelease.bind(this);\r\n  }\r\n\r\n  handleButtonPress() {\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      isPasswordVisible: true\r\n    }));\r\n  }\r\n\r\n  handleButtonRelease() {\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      isPasswordVisible: false\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const {props} = this;\r\n    const {isPasswordVisible} = this.state;\r\n    const showPasswordOptionClasses = [];\r\n    showPasswordOptionClasses.push(Styles['option']);\r\n    if (isPasswordVisible) showPasswordOptionClasses.push(Styles['status--active']);\r\n    return (\r\n      <div className={Styles['input']}>\r\n        <input {...props} type={isPasswordVisible ? 'text' : 'password'} />\r\n        <div className={Styles['options']}>\r\n          <div\r\n            className={showPasswordOptionClasses.join(' ')}\r\n            onTouchStart={this.handleButtonPress}\r\n            onTouchEnd={this.handleButtonRelease}\r\n            onMouseDown={this.handleButtonPress}\r\n            onMouseUp={this.handleButtonRelease}\r\n            onMouseLeave={this.handleButtonRelease}\r\n          >\r\n            <FontAwesomeIcon icon={faEye} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PasswordInput;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport validator from 'validator';\r\nimport countries from 'country-list-js';\r\nimport PasswordInput from './inputs/password';\r\n\r\nclass AccountForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {inputs} = this.props;\r\n    this.state = {\r\n      submitting: false,\r\n      countryCode: `${inputs['country'] ? `+${countries.findByIso2(inputs['country'])['dialing_code']}` : '+'}`\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleFullNameChange = this.handleFullNameChange.bind(this);\r\n    this.handleBusinessEmailChange = this.handleBusinessEmailChange.bind(this);\r\n    this.handleCountryChange = this.handleCountryChange.bind(this);\r\n    this.handlePhoneNumberChange = this.handlePhoneNumberChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleRepeatedPasswordChange = this.handleRepeatedPasswordChange.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const {inputs, actions} = this.props;\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      submitting: true\r\n    }));\r\n    const validations = {\r\n      fullName: this.validateFullName(inputs['fullName']),\r\n      businessEmail: this.validateBusinessEmail(inputs['businessEmail']),\r\n      country: this.validateCountry(inputs['country']),\r\n      phoneNumber: this.validatePhoneNumber(inputs['phoneNumber']),\r\n      password: this.validatePassword(inputs['password'], inputs['repeatedPassword']),\r\n      repeatedPassword: this.validateRepeatedPassword(inputs['password'], inputs['repeatedPassword'])\r\n    };\r\n    if (!Object.values(validations).some(_validation => _validation !== true)) actions.nextStep();\r\n  }\r\n\r\n  handleInputChange(item, value) {\r\n    const {onInputChange} = this.props;\r\n    onInputChange('account', item, value);\r\n  }\r\n\r\n  handleFullNameChange(event) {\r\n    this.handleInputChange('fullName', event.target.value);\r\n  }\r\n\r\n  handleBusinessEmailChange(event) {\r\n    this.handleInputChange('businessEmail', event.target.value);\r\n  }\r\n\r\n  handleCountryChange(event) {\r\n    this.handleInputChange('country', event.target.value);\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      countryCode: `+${countries.findByIso2(event.target.value)['dialing_code']}`\r\n    }));\r\n  }\r\n\r\n  handlePhoneNumberChange(event) {\r\n    this.handleInputChange('phoneNumber', event.target.value);\r\n  }\r\n\r\n  handlePasswordChange(event) {\r\n    this.handleInputChange('password', event.target.value);\r\n  }\r\n\r\n  handleRepeatedPasswordChange(event) {\r\n    this.handleInputChange('repeatedPassword', event.target.value);\r\n  }\r\n\r\n  validateFullName(fullName) {\r\n    if (!fullName) return 1;\r\n    return true;\r\n  }\r\n\r\n  validateBusinessEmail(businessEmail) {\r\n    if (!businessEmail) return 1;\r\n    if (!validator.isEmail(businessEmail)) return 2;\r\n    return true;\r\n  }\r\n  \r\n  validateCountry(country) {\r\n    if (!country) return 1;\r\n    return true;\r\n  }\r\n  \r\n  validatePhoneNumber(phoneNumber) {\r\n    if (!phoneNumber) return 1;\r\n    if (!validator.isMobilePhone(phoneNumber)) return 2;\r\n    return true;\r\n  }\r\n\r\n  validatePassword(password, repeatedPassword) {\r\n    if (!password) return 1;\r\n    if (password !== repeatedPassword) return 2;\r\n    if (password.length < 6) return 3;\r\n    return true;\r\n  }\r\n\r\n  validateRepeatedPassword(password, repeatedPassword) {\r\n    if (!repeatedPassword) return 1;\r\n    if (password !== repeatedPassword) return 2;\r\n    if (password.length < 6) return 3;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {submitting, countryCode} = this.state;\r\n    const {inputs} = this.props;\r\n    const validations = {\r\n      fullName: this.validateFullName(inputs['fullName']),\r\n      businessEmail: this.validateBusinessEmail(inputs['businessEmail']),\r\n      country: this.validateCountry(inputs['country']),\r\n      phoneNumber: this.validatePhoneNumber(inputs['phoneNumber']),\r\n      password: this.validatePassword(inputs['password'], inputs['repeatedPassword']),\r\n      repeatedPassword: this.validateRepeatedPassword(inputs['password'], inputs['repeatedPassword'])\r\n    };\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['header']}>\r\n          <div className={Styles['title']}>\r\n            Tell us more about you.\r\n          </div>\r\n        </div>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['items']}>\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['fullName'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      FULL NAME\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your full name\"\r\n                        value={inputs['fullName']}\r\n                        onChange={this.handleFullNameChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['fullName'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your full name\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['businessEmail'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      BUSINESS EMAIL\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your business email\"\r\n                        value={inputs['businessEmail']}\r\n                        onChange={this.handleBusinessEmailChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['businessEmail'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your business email\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              if (submitting && validations['country'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      COUNTRY\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <select\r\n                        className={!inputs['country'] ? Styles['status--empty'] : ''}\r\n                        value={inputs['country']}\r\n                        onChange={this.handleCountryChange}\r\n                      >\r\n                        <option value=\"\" hidden>Select Your country</option>\r\n                        {Object.values(countries.all).map(_country => (\r\n                          <option key={_country['iso2']} value={_country['iso2']}>{_country['name']}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['country'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Select your country\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['type--prefix']);\r\n              if (submitting && validations['phoneNumber'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['affix']}>\r\n                      {countryCode}\r\n                    </div>\r\n                    <div className={Styles['label']}>\r\n                      PHONE NUMBER\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your phone number\"\r\n                        value={inputs['phoneNumber']}\r\n                        onChange={this.handlePhoneNumberChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['phoneNumber'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your phone number\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['password'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      PASSWORD\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <PasswordInput\r\n                        placeholder=\"Enter Your password\"\r\n                        value={inputs['password']}\r\n                        onChange={this.handlePasswordChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['password'] === 1) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your password\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['repeatedPassword'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      REPEAT PASSWORD\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <PasswordInput\r\n                        placeholder=\"Enter Your password again\"\r\n                        value={inputs['repeatedPassword']}\r\n                        onChange={this.handleRepeatedPasswordChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['repeatedPassword'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    {(() => {\r\n                      switch (validations['repeatedPassword']) {\r\n                        case 1:\r\n                          return 'Please Enter your password again';\r\n                        case 2:\r\n                          return 'Please Enter matched password';\r\n                        case 3:\r\n                          return 'Please make sure that you password at least 6 digits';\r\n                        default:\r\n                          return '';\r\n                      }\r\n                    })()}\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className={Styles['footer']}>\r\n          <div className={Styles['links']}>\r\n            <div className={Styles['link']}>\r\n              <a href=\"/\">Back to login</a>\r\n            </div>\r\n          </div>\r\n          <div className={Styles['options']}>\r\n            <div className={`${Styles['option']} ${Styles['type--primary']}`} onClick={this.handleSubmit}>\r\n              Next\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountForm;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport validator from 'validator';\r\nimport countries from 'country-list-js';\r\nimport csc from 'country-state-city';\r\n\r\nclass CompanyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {inputs} = this.props;\r\n    this.state = {\r\n      submitting: false,\r\n      countryCode: `${inputs['country'] ? `+${countries.findByIso2(inputs['country'])['dialing_code']}` : '+'}`,\r\n      cities: inputs['country'] ? csc.getStatesOfCountry((csc.getAllCountries().find(_country => _country['sortname'] === inputs['country']) ?? {id: ''})['id']) : []\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleCompanyNameChange = this.handleCompanyNameChange.bind(this);\r\n    this.handleAddressChange = this.handleAddressChange.bind(this);\r\n    this.handleBusinessEmailChange = this.handleBusinessEmailChange.bind(this);\r\n    this.handleCountryChange = this.handleCountryChange.bind(this);\r\n    this.handleCityChange = this.handleCityChange.bind(this);\r\n    this.handlePhoneNumberChange = this.handlePhoneNumberChange.bind(this);\r\n    this.handleAltPhoneNumberChange = this.handleAltPhoneNumberChange.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const {inputs, actions} = this.props;\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      submitting: true\r\n    }));\r\n    const validations = {\r\n      companyName: this.validateCompanyName(inputs['companyName']),\r\n      address: this.validateAddress(inputs['address']),\r\n      businessEmail: this.validateBusinessEmail(inputs['businessEmail']),\r\n      country: this.validateCountry(inputs['country']),\r\n      city: this.validateCity(inputs['country'], inputs['city']),\r\n      phoneNumber: this.validatePhoneNumber(inputs['phoneNumber']),\r\n      altPhoneNumber: this.validateAltPhoneNumber(inputs['altPhoneNumber'])\r\n    };\r\n    if (!Object.values(validations).some(_validation => _validation !== true)) actions.nextStep();\r\n  }\r\n\r\n  handleBack() {\r\n    const {actions} = this.props;\r\n    actions.previousStep();\r\n  }\r\n\r\n  handleInputChange(item, value) {\r\n    const {onInputChange} = this.props;\r\n    onInputChange('company', item, value);\r\n  }\r\n\r\n  handleCompanyNameChange(event) {\r\n    this.handleInputChange('companyName', event.target.value);\r\n  }\r\n\r\n  handleAddressChange(event) {\r\n    this.handleInputChange('address', event.target.value);\r\n  }\r\n\r\n  handleBusinessEmailChange(event) {\r\n    this.handleInputChange('businessEmail', event.target.value);\r\n  }\r\n\r\n  handleCountryChange(event) {\r\n    this.handleInputChange('country', event.target.value);\r\n    this.handleInputChange('city', '');\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      countryCode: `+${countries.findByIso2(event.target.value)['dialing_code']}`,\r\n      cities: csc.getStatesOfCountry((csc.getAllCountries().find(_country => _country['sortname'] === event.target.value) ?? {id: ''})['id'])\r\n    }));\r\n  }\r\n\r\n  handleCityChange(event) {\r\n    this.handleInputChange('city', event.target.value);\r\n  }\r\n\r\n  handlePhoneNumberChange(event) {\r\n    this.handleInputChange('phoneNumber', event.target.value);\r\n  }\r\n\r\n  handleAltPhoneNumberChange(event) {\r\n    this.handleInputChange('altPhoneNumber', event.target.value);\r\n  }\r\n\r\n  validateCompanyName(companyName) {\r\n    if (!companyName) return 1;\r\n    return true;\r\n  }\r\n  \r\n  validateAddress(address) {\r\n    if (!address) return 1;\r\n    return true;\r\n  }\r\n\r\n  validateBusinessEmail(businessEmail) {\r\n    if (!businessEmail) return 1;\r\n    if (!validator.isEmail(businessEmail)) return 2;\r\n    return true;\r\n  }\r\n  \r\n  validateCountry(country) {\r\n    if (!country) return 1;\r\n    return true;\r\n  }\r\n  \r\n  validateCity(country, city) {\r\n    const {cities} = this.state;\r\n    if (!country) return 1;\r\n    if (!city && cities.length) return 2;\r\n    return true;\r\n  }\r\n  \r\n  validatePhoneNumber(phoneNumber) {\r\n    if (!phoneNumber) return 1;\r\n    if (!validator.isMobilePhone(phoneNumber)) return 2;\r\n    return true;\r\n  }\r\n  \r\n  validateAltPhoneNumber(altPhoneNumber) {\r\n    if (!altPhoneNumber) return 1;\r\n    if (!validator.isMobilePhone(altPhoneNumber)) return 2;\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {submitting, countryCode, cities} = this.state;\r\n    const {inputs} = this.props;\r\n    const validations = {\r\n      companyName: this.validateCompanyName(inputs['companyName']),\r\n      address: this.validateAddress(inputs['address']),\r\n      businessEmail: this.validateBusinessEmail(inputs['businessEmail']),\r\n      country: this.validateCountry(inputs['country']),\r\n      city: this.validateCity(inputs['country'], inputs['city']),\r\n      phoneNumber: this.validatePhoneNumber(inputs['phoneNumber']),\r\n      altPhoneNumber: this.validateAltPhoneNumber(inputs['altPhoneNumber'])\r\n    };\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['header']}>\r\n          <div className={Styles['title']}>\r\n            Verify your compnay.\r\n          </div>\r\n        </div>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['title']}>\r\n            Entring this information corectlly will facilitate the compnay verfication proccess\r\n          </div>\r\n          <div className={Styles['items']}>\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              itemClasses.push(Styles['type--suffix']);\r\n              if (submitting && validations['companyName'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['affix']}>\r\n                      <select\r\n                        className={!inputs['language'] ? Styles['status--empty'] : ''}\r\n                        defaultValue={inputs['language']}\r\n                      >\r\n                        <option value=\"en\">English</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className={Styles['label']}>\r\n                      COMPANY NAME\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your company name\"\r\n                        value={inputs['companyName']}\r\n                        onChange={this.handleCompanyNameChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['companyName'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your company name\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['address'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      ADDRESS\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your address\"\r\n                        value={inputs['address']}\r\n                        onChange={this.handleAddressChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['address'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your address\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              if (submitting && validations['businessEmail'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      BUSINESS EMAIL\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your business email\"\r\n                        value={inputs['businessEmail']}\r\n                        onChange={this.handleBusinessEmailChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['businessEmail'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your business email\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              if (submitting && validations['country'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      COUNTRY\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <select\r\n                        className={!inputs['country'] ? Styles['status--empty'] : ''}\r\n                        value={inputs['country']}\r\n                        onChange={this.handleCountryChange}\r\n                      >\r\n                        <option value=\"\" hidden>Select Your country</option>\r\n                        {Object.values(countries.all).map(_country => (\r\n                          <option key={_country['iso2']} value={_country['iso2']}>{_country['name']}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['country'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Select your country\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              if (!inputs['country']) itemClasses.push(Styles['theme--disabled']);\r\n              if (submitting && validations['city'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['label']}>\r\n                      CITY\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <select\r\n                        className={!inputs['city'] ? Styles['status--empty'] : ''}\r\n                        value={inputs['city']}\r\n                        onChange={this.handleCityChange}\r\n                        disabled={!inputs['country']}\r\n                      >\r\n                        <option value=\"\" hidden>Select Your city</option>\r\n                        {cities.map(_city => (\r\n                          <option key={_city['id']} value={_city['name']}>{_city['name']}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['city'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    {(() => {\r\n                      switch (validations['city']) {\r\n                        case 1:\r\n                          return 'Please Select your country first';\r\n                        case 2:\r\n                          return 'Please Select your city';\r\n                        default:\r\n                          return '';\r\n                      }\r\n                    })()}\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['type--prefix']);\r\n              if (submitting && validations['phoneNumber'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['affix']}>\r\n                      {countryCode}\r\n                    </div>\r\n                    <div className={Styles['label']}>\r\n                      COMPANY PHONE NUMBER\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your company phone number\"\r\n                        value={inputs['phoneNumber']}\r\n                        onChange={this.handlePhoneNumberChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['phoneNumber'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your company phone number\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['type--prefix']);\r\n              if (submitting && validations['altPhoneNumber'] !== true) itemClasses.push(Styles['theme--error']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['field']}>\r\n                    <div className={Styles['affix']}>\r\n                      {countryCode}\r\n                    </div>\r\n                    <div className={Styles['label']}>\r\n                      COMPANY PHONE NUMBER\r\n                    </div>\r\n                    <div className={Styles['input']}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your company phone number\"\r\n                        value={inputs['altPhoneNumber']}\r\n                        onChange={this.handleAltPhoneNumberChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {(submitting && validations['altPhoneNumber'] !== true) && (\r\n                  <div className={Styles['note']}>\r\n                    Please Enter your company phone number\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className={Styles['footer']}>\r\n          <div className={Styles['links']}>\r\n          </div>\r\n          <div className={Styles['options']}>\r\n            <div className={`${Styles['option']}`} onClick={this.handleBack}>\r\n              Back\r\n            </div>\r\n            <div className={`${Styles['option']} ${Styles['type--primary']}`} onClick={this.handleSubmit}>\r\n              Next\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompanyForm;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport {faImages} from '@fortawesome/free-regular-svg-icons';\r\n\r\nclass LogoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitting: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const {actions} = this.props;\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      submitting: true\r\n    }));\r\n    actions.nextStep();\r\n  }\r\n\r\n  handleBack() {\r\n    const {actions} = this.props;\r\n    actions.previousStep();\r\n  }\r\n\r\n  render() {\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['header']}>\r\n          <div className={Styles['title']}>\r\n            Upload compnay Logo.\r\n          </div>\r\n        </div>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['items']}>\r\n            {(() => {\r\n              const itemClasses = [Styles['item']];\r\n              itemClasses.push(Styles['size--full']);\r\n              return (\r\n                <div className={itemClasses.join(' ')}>\r\n                  <div className={Styles['image']}>\r\n                    <div className={Styles['holder']}>\r\n                      <div className={Styles['icon']}>\r\n                        <div className={Styles['button']}>\r\n                          <FontAwesomeIcon icon={faPlus} />\r\n                        </div>\r\n                        <FontAwesomeIcon icon={faImages} />\r\n                      </div>\r\n                    </div>\r\n                    <div className={Styles['description']}>\r\n                      Only images with a size lower than 500 KB are allowed.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className={Styles['footer']}>\r\n          <div className={Styles['links']}>\r\n          </div>\r\n          <div className={Styles['options']}>\r\n            <div className={`${Styles['option']}`} onClick={this.handleBack}>\r\n              Back\r\n            </div>\r\n            <div className={`${Styles['option']} ${Styles['type--primary']}`} onClick={this.handleSubmit}>\r\n              Submit\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogoForm;","export default __webpack_public_path__ + \"static/media/blue-mailbox.791144d7.jpg\";","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport blueMailBox from './blue-mailbox.jpg';\r\n\r\nclass ConfirmationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitting: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    const {actions} = this.props;\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      submitting: true\r\n    }));\r\n    this.handleInputChange('confirmation', true);\r\n    actions.nextStep();\r\n  }\r\n\r\n  handleBack() {\r\n    const {actions} = this.props;\r\n    actions.previousStep();\r\n  }\r\n\r\n  handleInputChange(item, value) {\r\n    const {onInputChange} = this.props;\r\n    onInputChange('confirmation', item, value);\r\n  }\r\n\r\n  render() {\r\n    const {description} = this.props;\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['header']}>\r\n          <div className={Styles['title']}>\r\n            You are all set. Ready?\r\n          </div>\r\n        </div>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['message']}>\r\n            <div className={Styles['image']}>\r\n              <img src={blueMailBox} alt=\"\" />\r\n            </div>\r\n            <div className={Styles['title']}>\r\n              We will send a message for this e-mail\r\n            </div>\r\n            <div className={Styles['description']}>\r\n              {description}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={Styles['footer']}>\r\n          <div className={Styles['links']}>\r\n          </div>\r\n          <div className={Styles['options']}>\r\n            <div className={`${Styles['option']}`} onClick={this.handleBack}>\r\n              Back\r\n            </div>\r\n            <div className={`${Styles['option']} ${Styles['type--primary']}`} onClick={this.handleSubmit}>\r\n              Confirm\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConfirmationForm;","export default __webpack_public_path__ + \"static/media/loader.8a9de4a8.gif\";","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport csc from 'country-state-city';\r\nimport blueMailBox from './blue-mailbox.jpg';\r\nimport loader from './loader.gif';\r\n\r\nclass DoneForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      sending: false\r\n    };\r\n    this.handleSendData = this.handleSendData.bind(this);\r\n  }\r\n\r\n  sendData() {\r\n    const {inputs} = this.props;\r\n    const countryID = (csc.getAllCountries().find(_country => _country['sortname'] === inputs['company']['country']) ?? {id: ''})['id'];\r\n    const cityID = (csc.getStatesOfCountry(countryID).find(_city => _city['name'] === inputs['company']['city']) ?? {id: ''})['id'];\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_full_name\", inputs['account']['fullName']);\r\n    formdata.append(\"user_email\", inputs['account']['businessEmail']);\r\n    formdata.append(\"user_phone\", inputs['account']['phoneNumber']);\r\n    formdata.append(\"user_nationality\", inputs['account']['country']);\r\n    formdata.append(\"user_password\", inputs['account']['password']);\r\n    formdata.append(\"user_password_confirmation\", inputs['account']['repeatedPassword']);\r\n    formdata.append(\"user_position\", \"\");\r\n    formdata.append(\"user_extra_data[phone]\", \"\");\r\n    formdata.append(\"lang\", inputs['company']['language']);\r\n    formdata.append(\"company_name\", inputs['company']['companyName']);\r\n    formdata.append(\"company_address\", inputs['company']['address']);\r\n    formdata.append(\"company_business_email\", inputs['company']['businessEmail']);\r\n    formdata.append(\"company_phone\", inputs['company']['phoneNumber']);\r\n    formdata.append(\"company_extra_data[phone]\", inputs['company']['altPhoneNumber']);\r\n    formdata.append(\"company_country_id\", countryID);\r\n    formdata.append(\"company_city_id\", cityID);\r\n    // formdata.append(\"company_avatar\", \"\", \"\");\r\n    fetch(\"https://id.safav2.io.safavisa.com/register\", {\r\n      method: 'POST',\r\n      body: formdata,\r\n      redirect: 'follow'\r\n    })\r\n    .then(response => response.text())\r\n    .then(result => {\r\n      this.setState(_state => ({\r\n        ..._state,\r\n        loading: false,\r\n        sending: true\r\n      }));\r\n    })\r\n    .catch(error => {\r\n      this.setState(_state => ({\r\n        ..._state,\r\n        loading: false,\r\n        sending: false\r\n      }));\r\n    });\r\n  }\r\n\r\n  handleSendData() {\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      loading: true,\r\n      sending: false\r\n    }));\r\n    this.sendData();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sendData();\r\n  }\r\n\r\n  render() {\r\n    const {loading, sending} = this.state;\r\n    const classes = [];\r\n    classes.push(Styles['form']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['main']}>\r\n          <div className={Styles['message']}>\r\n            <div className={Styles['image']}>\r\n              <img src={blueMailBox} alt=\"\" />\r\n            </div>\r\n            {loading ? (\r\n            <img src={loader} alt=\"\" />\r\n            ) : sending ? (\r\n            <>\r\n              <div className={Styles['label']}>\r\n                Congratz, you successfully created your account\r\n              </div>\r\n              <div className={Styles['description']}>\r\n                We just sent you a confirmation email\r\n                <br />\r\n                Please check your E-mail\r\n              </div>\r\n            </>\r\n            ) : (\r\n            <div className={Styles['note']}>\r\n              There is an error happens please <span className={Styles['link']} onClick={this.handleSendData}>try</span> again later \r\n            </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DoneForm;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faUser, faBuilding, faImages, faCheckCircle} from '@fortawesome/free-regular-svg-icons';\r\n\r\nclass Steps extends Component {\r\n  static defaultProps = {\r\n    steps: [\r\n      {id: 'account', icon: <FontAwesomeIcon icon={faUser} />},\r\n      {id: 'company', icon: <FontAwesomeIcon icon={faBuilding} />},\r\n      {id: 'logo', icon: <FontAwesomeIcon icon={faImages} />},\r\n      {id: 'confirmation', icon: <FontAwesomeIcon icon={faCheckCircle} />}\r\n    ],\r\n    currentStep: 1\r\n  }\r\n  render() {\r\n    const {steps, currentStep} = this.props;\r\n    const classes = [];\r\n    classes.push(Styles['steps']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <div className={Styles['bar']}>\r\n          <div className={Styles['progress']} style={{width: `${(((currentStep > 1 ? (currentStep < steps.length ? currentStep : steps.length) : 1) - 1) / (steps.length - 1) * 100)}%`}}></div>\r\n        </div>\r\n        {steps.map((_step, _stepIndex) => {\r\n          const stepCalsses = [];\r\n          stepCalsses.push(Styles['step']);\r\n          if ((_stepIndex + 1) < currentStep) stepCalsses.push(Styles['status--completed']);\r\n          if ((_stepIndex + 1) === currentStep) stepCalsses.push(Styles['status--current']);\r\n          return (\r\n            <div key={_step['id']} className={stepCalsses.join(' ')}>\r\n              {_step['icon']}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Steps;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport AccountFrom from './form/account';\r\nimport CompanyFrom from './form/company';\r\nimport LogoFrom from './form/logo';\r\nimport ConfirmationFrom from './form/confirmation';\r\nimport DoneFrom from './form/done';\r\nimport Steps from './steps';\r\n\r\nclass RegistrationSteps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentStep: 1,\r\n      inputs: {\r\n        account: {\r\n          fullName: '',\r\n          businessEmail: '',\r\n          country: '',\r\n          phoneNumber: '',\r\n          password: '',\r\n          repeatedPassword: ''\r\n        },\r\n        company: {\r\n          language: 'en',\r\n          companyName: '',\r\n          address: '',\r\n          businessEmail: '',\r\n          country: '',\r\n          city: '',\r\n          phoneNumber: '',\r\n          altPhoneNumber: '',\r\n        },\r\n        logo: {\r\n        },\r\n        confirmation: {\r\n          confirmation: false\r\n        }\r\n      },\r\n      done: false\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.changeCurrentStep = this.changeCurrentStep.bind(this);\r\n    this.changeCurrentStepToAccount = this.changeCurrentStepToAccount.bind(this);\r\n    this.changeCurrentStepToCompany = this.changeCurrentStepToCompany.bind(this);\r\n    this.changeCurrentStepToLogo = this.changeCurrentStepToLogo.bind(this);\r\n    this.changeCurrentStepToConfirmations = this.changeCurrentStepToConfirmations.bind(this);\r\n    this.changeCurrentStepToDone = this.changeCurrentStepToDone.bind(this);\r\n  }\r\n\r\n  changeCurrentStepToAccount() {\r\n    this.changeCurrentStep(1);\r\n  }\r\n\r\n  changeCurrentStepToCompany() {\r\n    this.changeCurrentStep(2);\r\n  }\r\n  \r\n  changeCurrentStepToLogo() {\r\n    this.changeCurrentStep(3);\r\n  }\r\n  \r\n  changeCurrentStepToConfirmations() {\r\n    this.changeCurrentStep(4);\r\n  }\r\n\r\n  changeCurrentStepToDone() {\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      done: true\r\n    }));\r\n  }\r\n\r\n  changeCurrentStep(currentStep) {\r\n    this.setState(_state => ({\r\n      ..._state,\r\n      currentStep\r\n    }));\r\n  }\r\n\r\n  handleInputChange(form, item, value) {\r\n    this.setState(_state => {\r\n      _state['inputs'][form][item] = value;\r\n      return _state;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {inputs, currentStep, done} = this.state;\r\n    const classes = [];\r\n    classes.push(Styles['registration-steps']);\r\n    return done ? (\r\n      <DoneFrom inputs={inputs} />\r\n    ) : (\r\n      <div className={classes.join()}>\r\n          <section className={Styles['steps-bar']}>\r\n            <Steps currentStep={currentStep} />\r\n          </section>\r\n          <section className={Styles['form']}>\r\n            {(() => {\r\n              switch (currentStep) {\r\n                case 1:\r\n                  return <AccountFrom\r\n                    inputs={inputs['account']}\r\n                    onInputChange={this.handleInputChange}\r\n                    actions={{\r\n                      nextStep: this.changeCurrentStepToCompany\r\n                    }}\r\n                  />\r\n                case 2:\r\n                  return <CompanyFrom\r\n                    inputs={inputs['company']}\r\n                    onInputChange={this.handleInputChange}\r\n                    actions={{\r\n                      previousStep: this.changeCurrentStepToAccount,\r\n                      nextStep: this.changeCurrentStepToLogo\r\n                    }}\r\n                  />\r\n                case 3:\r\n                  return <LogoFrom\r\n                    inputs={inputs['logo']}\r\n                    onInputChange={this.handleInputChange}\r\n                    actions={{\r\n                      previousStep: this.changeCurrentStepToCompany,\r\n                      nextStep: this.changeCurrentStepToConfirmations\r\n                    }}\r\n                  />\r\n                case 4:\r\n                  return <ConfirmationFrom\r\n                    inputs={inputs['confirmation']}\r\n                    onInputChange={this.handleInputChange}\r\n                    actions={{\r\n                      previousStep: this.changeCurrentStepToLogo,\r\n                      nextStep: this.changeCurrentStepToDone\r\n                    }}\r\n                    description={inputs['account']['businessEmail']}\r\n                  />\r\n                default:\r\n              }\r\n            })()}\r\n          </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegistrationSteps;","import React, {Component} from 'react';\r\nimport Styles from './index.module.scss';\r\nimport RegistrationSteps from '../../components/registration-steps';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    const classes = [];\r\n    classes.push(Styles['layout']);\r\n    return (\r\n      <div className={classes.join()}>\r\n        <section className={Styles['initial-screen']}>\r\n          <section className={Styles['header']}>\r\n          </section>\r\n          <section className={Styles['main']}>\r\n            <RegistrationSteps />\r\n          </section>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport MainLayout from '../layouts/main';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <MainLayout />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Home from './pages/home';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"steps\":\"steps_steps__1yyN3\",\"bar\":\"steps_bar__2C6HH\",\"progress\":\"steps_progress__3QOiJ\",\"step\":\"steps_step__3qWPJ\",\"status--current\":\"steps_status--current__7mAyu\",\"status--completed\":\"steps_status--completed__2UCk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"main_layout__2BPsF\",\"initial-screen\":\"main_initial-screen__2BsSE\",\"header\":\"main_header__2MJIR\",\"main\":\"main_main__1bDNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"inputs_input__3lJYG\",\"options\":\"inputs_options__hz_Ib\",\"option\":\"inputs_option__2txNe\",\"status--active\":\"inputs_status--active__3dlCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration-steps\":\"registration-steps_registration-steps__2WZ4X\"};"],"sourceRoot":""}